#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(caret)
library(tidyverse)
library(DT)
data("GermanCredit")
shinyServer(function(input, output) {
  data <- reactive({
    var <- input$TI
    var2 <- input$NI
    GermanCreditSub <- GermanCredit[, c("Class", "InstallmentRatePercentage", 
                                        var),drop = FALSE]
    tab <- aggregate(GermanCreditSub[[var]] ~ Class + InstallmentRatePercentage,
                     data = GermanCreditSub, FUN = "mean")
    tab$`GermanCreditSub[[var]]` <- round(tab$`GermanCreditSub[[var]]`, 
                                          digit = var2)
    setNames(tab, c("Class", "InstallmentRatePercentage", 
                    paste0("Average ", var)))
  })
  
output$myTable<- renderDataTable({
  info <- data()
})

# code that will return plot
output$distPlot <- renderPlot({
  if(input$dist == "Just Classification"){
    g <- ggplot(data = GermanCredit, aes(x = Class))
    g + geom_bar()
  } else if(input$dist == "Classification and Unemployed"){
    g + geom_bar(aes(fill = as.factor(EmploymentDuration.Unemployed)), 
                 position = "dodge") + labs(fill = "Unemployment Status")
  } else {
    g + geom_bar(aes(fill = as.factor(ForeignWorker)), position = "dodge") +
      labs(fill = "Status")
  }
})
})