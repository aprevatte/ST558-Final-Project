---
title: "Untitled"
author: "Alex Prevatte"
date: "12/4/2021"
output: pdf_document
---

```{r}
#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(DT)

# Read in the data file
adultData <- read_delim("adult.data", 
                        delim = ",",
                        col_names = c("Age", "Workclass", "fnlwgt", "Education", "Education Number", "Marital Status", "Occupation", "Relationship", "Race", "Sex", "Capital Gain", "Capital Loss", "Hours per week", "Native Country", "Income"),skip = 1)

# Data Cleaning

# Remove 'fnlwgt', 'education', 'capital-gain', and 'capital-loss'
adultData <- select(adultData, -c(fnlwgt, Education, `Capital Gain`, `Capital Loss`))

# Replace '?' entries with 'NA' and drop NA's.
adultData[adultData == " ?"] <- NA
adultData <- na.omit(adultData)

# Convert character variables to factors
adultData$Income <- as.factor(adultData$Income)
adultData$Workclass <- as.factor(adultData$Workclass)
adultData$`Education Number` <- as.numeric(adultData$`Education Number`)
adultData$`Marital Status` <- as.factor(adultData$`Marital Status`)
adultData$Occupation <- as.factor(adultData$Occupation)
adultData$Relationship <- as.factor(adultData$Relationship)
adultData$Race <- as.factor(adultData$Race)
adultData$Sex <- as.factor(adultData$Sex)
adultData$`Hours per week` <- as.numeric(adultData$`Hours per week`)
adultData$`Native Country` <- as.factor(adultData$`Native Country`)

# Define server logic required to draw a histogram
shinyServer(function(input, output) {
    
    output$summary <- renderDataTable({
            var <- input$TI
            var2 <- input$NI
            adultDataSub <- adultData[, c("Income", var),drop = FALSE]
            tab <- aggregate(adultDataSub[[var]] ~ Income,
                             data = adultDataSub, FUN = "mean")
            tab$`adultDataSub[[var]]` <- round(tab$`adultDataSub[[var]]`, 
                                                  digit = var2)
            tab2 <- aggregate(adultDataSub[[var]] ~ Income,
                              data = adultDataSub, FUN = "median")
            tab2$`adultDataSub[[var]]` <- round(tab2$`adultDataSub[[var]]`, 
                                               digit = var2)
            setNames(tab, c("Income", paste0("Average ", var), paste0("Median , var")))
        })
    
    output$distPlot <- renderPlot({
    # code that will return plot
    if(input$dist == "Gender Classification with Income Level"){
        g <- ggplot(data = adultData, aes(x = Sex))
        g + geom_bar(aes(fill = Income), 
                     position = "dodge") + labs(fill = "Income Level") +
            coord_flip()
    } else if(input$dist == "Education Classification with Income Level"){
        g <- ggplot(data = adultData, aes(x = `Education Number`))
        g + geom_bar(aes(fill = Income), 
                     position = "dodge") + labs(fill = "Income Level") +
            coord_flip()
    } else if(input$dist == "Occupation Classification with Income Level"){
        g <- ggplot(data = adultData, aes(x = Occupation))
        g + geom_bar(aes(fill = Income), 
                     position = "dodge") + labs(fill = "Income Level") +
            coord_flip()
    } else {
        g <- ggplot(data = adultData, aes(x = Race))
        g + geom_bar(aes(fill = Income), 
                     position = "dodge") + labs(fill = "Income Level") +
            coord_flip()
    }
})
})

```

